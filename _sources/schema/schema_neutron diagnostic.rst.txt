
neutron diagnostic
^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th style="width:25%">Path</th><th style="width:25%">Dimensions</th><th>Type</th><th>Units</th><th>Description</th></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p></p></td><td><p></p></td><td><p>Neutron diagnostic such as DNFM, NFM or MFC</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.characteristics</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Description of Diagnostic's module detection characteristics for differen plasma modes based on Design Description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.characteristics.dead_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Dead time of detectors</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.characteristics.pulse_length</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Lower counting limit of recent Measuring Mode and plasma reaction</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.characteristics.reaction</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.characteristics.reaction[:].index]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Plasma reaction (1 -'DT'; 2 - 'DD')</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.characteristics.reaction[:].error</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Diagnostic's relative uncertainty for recent plasma reaction</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.characteristics.reaction[:].index</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of plasma reaction type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.characteristics.reaction[:].mode</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.characteristics.reaction[:].mode[:].index]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Characteristics of counting linear limits in recent Measuring modes for recent Plasma reaction type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.characteristics.reaction[:].mode[:].count_limit_max</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>cps</p></td><td><p>Maximum count limit of recent Measuring Mode and plasma reaction</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.characteristics.reaction[:].mode[:].count_limit_min</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>cps</p></td><td><p>Minimum count limit of recent Measuring Mode and plasma reaction</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.characteristics.reaction[:].mode[:].index</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of Measuring Mode</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.characteristics.reaction[:].mode[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of Measuring Mode</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.characteristics.reaction[:].probability_overlap</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Pulse probability overlap for recent plasma reaction</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.code</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Generic decription of the code-specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.code.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.code.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software generating IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.code.output_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.code.parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.code.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.code.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Description of Detectors properties and Data in Neutron Diagnostic Module</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].adc</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Description of analogic-digital converter</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].adc.bias</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>V</p></td><td><p>ADC signal bias</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].adc.discriminator_level_lower</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Lower level discriminator of ADC</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].adc.discriminator_level_upper</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Upper level discriminator of ADC</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].adc.impedance</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>ohm</p></td><td><p>ADC impedance</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].adc.input_range</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>V</p></td><td><p>ADC input range</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].adc.power_switch</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Power switch (1=on, 0=off)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].adc.sampling_rate</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of samples recorded per second</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].amplitude_peak</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>V</p></td><td><p>Processed peak amplitude of the measured signal</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].amplitude_peak.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].amplitude_peak.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].amplitude_peak.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].amplitude_raw</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>V</p></td><td><p>Raw amplitude of the measured signal</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].amplitude_raw.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].amplitude_raw.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].amplitude_raw.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Description of a set of collimating apertures</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].centre</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>If geometry_type=2, coordinates of the center of the circle. If geometry_type=1, coordinates of the origin of the local coordinate system (X1,X2,X3) describing the plane detector/aperture. This origin is located within the detector/aperture area.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].centre.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].centre.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].centre.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].geometry_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Type of geometry used to describe the surface of the detector or aperture (1:'outline', 2:'circular'). In case of 'outline', the surface is described by an outline of point in a local coordinate system defined by a centre and three unit vectors X1, X2, X3. In case of 'circular', the surface is a circle defined by its centre, radius, and normal vector oriented towards the plasma X3.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].outline</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Irregular outline of the detector/aperture in the (X1, X2) coordinate system</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].aperture[:].outline.x1</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Positions along x1 axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].outline.x2</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].aperture[:].outline.x1]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Positions along x2 axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].radius</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Radius of the circle, used only if geometry_type = 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].surface</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^2</p></td><td><p>Surface of the detector/aperture, derived from the above geometric data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].x1_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Components of the X1 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X1 vector is horizontal and oriented is the positive phi direction (counter-clockwise when viewing from above). </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].x1_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].x1_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].x1_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].x2_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Components of the X2 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X2 axis is orthonormal so that uX2 = uX3 x uX1.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].x2_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].x2_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].x2_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].x3_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Components of the X3 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X3 axis is normal to the detector/aperture plane and oriented towards the plasma.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].x3_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].x3_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].aperture[:].x3_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].b_field_sensor</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Magnetic field sensor</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].b_field_sensor.amplitude</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>V</p></td><td><p>Generated signal amplitude</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].b_field_sensor.amplitude.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].b_field_sensor.amplitude.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].b_field_sensor.amplitude.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].b_field_sensor.fall_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Peak fall time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].b_field_sensor.frequency</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>Hz</p></td><td><p>Generated signal frequency</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].b_field_sensor.frequency.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].b_field_sensor.frequency.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Hz</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].b_field_sensor.frequency.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].b_field_sensor.power_switch</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Power switch (1=on, 0=off)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].b_field_sensor.rise_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Peak rise time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].b_field_sensor.shape</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Signal shape. Index : 1 – rectangular, 2 – gaussian</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].b_field_sensor.shape.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].b_field_sensor.shape.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].b_field_sensor.shape.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Detector description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.centre</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>If geometry_type=2, coordinates of the center of the circle. If geometry_type=1, coordinates of the origin of the local coordinate system (X1,X2,X3) describing the plane detector/aperture. This origin is located within the detector/aperture area.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.centre.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.centre.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.centre.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.geometry_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Type of geometry used to describe the surface of the detector or aperture (1:'outline', 2:'circular'). In case of 'outline', the surface is described by an outline of point in a local coordinate system defined by a centre and three unit vectors X1, X2, X3. In case of 'circular', the surface is a circle defined by its centre, radius, and normal vector oriented towards the plasma X3.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.outline</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Irregular outline of the detector/aperture in the (X1, X2) coordinate system</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].detector.outline.x1</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Positions along x1 axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.outline.x2</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].detector.outline.x1]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Positions along x2 axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.radius</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Radius of the circle, used only if geometry_type = 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.surface</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^2</p></td><td><p>Surface of the detector/aperture, derived from the above geometric data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.x1_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Components of the X1 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X1 vector is horizontal and oriented is the positive phi direction (counter-clockwise when viewing from above). </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.x1_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.x1_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.x1_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.x2_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Components of the X2 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X2 axis is orthonormal so that uX2 = uX3 x uX1.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.x2_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.x2_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.x2_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.x3_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Components of the X3 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X3 axis is normal to the detector/aperture plane and oriented towards the plasma.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.x3_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.x3_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].detector.x3_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].end_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Time stamp of the moment diagnostic ends recording data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].energy_band</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Set of energy bands in which neutrons are counted by the detector</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].energy_band[:].detection_efficiency</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].energy_band[:].energies]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Probability of detection of a photon impacting the detector as a function of its energy </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].energy_band[:].energies</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Array of discrete energy values inside the band</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].energy_band[:].lower_bound</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>eV</p></td><td><p>Lower bound of the energy band</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].energy_band[:].upper_bound</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>eV</p></td><td><p>Upper bound of the energy band</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].mode</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Measuring Mode Properties and Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].mode[:].counting</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>cps</p></td><td><p>Counting in Measuring Mode in Dynamic</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].mode[:].counting.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].mode[:].counting.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>cps</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].mode[:].counting.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].mode[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of Measuring Mode</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of Detector</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].position</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Detector Position Data SHOULD BE REMOVED, REDUNDANT WITH THE NEW DETECTOR DESCRIPTION</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].position.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].position.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].position.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].radiation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].radiation[:].index]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Radiation type on detector's converter (1 - 'neutrons'; 2 - 'gamma-rays')</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].radiation[:].converter_name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of detector's converter for resent particle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].radiation[:].converter_nuclear_density</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Nuclear density of detector's converter for resent particle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].radiation[:].converter_temperature</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>K</p></td><td><p>Temperature of detector's converter</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].radiation[:].converter_volume</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^3</p></td><td><p>Volume of detector's converter for resent particle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].radiation[:].index</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of radiation type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].spectrum</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].energy_band,<br> neutron_diagnostic.detectors[:].spectrum.time]</p></td><td><p>structure</p></td><td><p></p></td><td><p>Detected count per energy channel as a function of time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].spectrum.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].spectrum.data.as_parent,<br> neutron_diagnostic.detectors[:].spectrum.time]</p></td><td><p>INT_2D</p></td><td><p></p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].spectrum.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].spectrum_sampling_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Sampling time used to obtain one spectrum time slice</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].spectrum_total</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].energy_band]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Detected count per energy channel, integrated over the whole acquisition duration</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].start_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Time stamp of the moment diagnostic starts recording data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].supply_high_voltage</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Description of high voltage power supply</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].supply_high_voltage.power_switch</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Power switch (1=on, 0=off)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].supply_high_voltage.voltage_out</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>V</p></td><td><p>Voltage at the supply output</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].supply_high_voltage.voltage_out.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].supply_high_voltage.voltage_out.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].supply_high_voltage.voltage_out.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].supply_high_voltage.voltage_set</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>V</p></td><td><p>Voltage set</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].supply_high_voltage.voltage_set.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].supply_high_voltage.voltage_set.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].supply_high_voltage.voltage_set.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].supply_low_voltage</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Description of low voltage power supply</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].supply_low_voltage.power_switch</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Power switch (1=on, 0=off)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].supply_low_voltage.voltage_out</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>V</p></td><td><p>Voltage at the supply output</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].supply_low_voltage.voltage_out.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].supply_low_voltage.voltage_out.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].supply_low_voltage.voltage_out.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].supply_low_voltage.voltage_set</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>V</p></td><td><p>Voltage set</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].supply_low_voltage.voltage_set.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].supply_low_voltage.voltage_set.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].supply_low_voltage.voltage_set.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].temperature_sensor</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Temperature sensor</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].temperature_sensor.amplitude</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>V</p></td><td><p>Generated signal amplitude</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].temperature_sensor.amplitude.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].temperature_sensor.amplitude.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].temperature_sensor.amplitude.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].temperature_sensor.fall_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Peak fall time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].temperature_sensor.frequency</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>Hz</p></td><td><p>Generated signal frequency</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].temperature_sensor.frequency.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].temperature_sensor.frequency.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Hz</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].temperature_sensor.frequency.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].temperature_sensor.power_switch</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Power switch (1=on, 0=off)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].temperature_sensor.rise_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Peak rise time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].temperature_sensor.shape</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Signal shape. Index : 1 – rectangular, 2 – gaussian</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].temperature_sensor.shape.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].temperature_sensor.shape.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].temperature_sensor.shape.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].test_generator</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Test generator characteristics</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].test_generator.amplitude</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>V</p></td><td><p>Generated signal amplitude</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].test_generator.amplitude.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].test_generator.amplitude.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].test_generator.amplitude.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].test_generator.fall_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Peak fall time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].test_generator.frequency</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>Hz</p></td><td><p>Generated signal frequency</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].test_generator.frequency.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors[:].test_generator.frequency.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Hz</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.detectors[:].test_generator.frequency.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].test_generator.power_switch</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Power switch (1=on, 0=off)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].test_generator.rise_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Peak rise time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].test_generator.shape</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Signal shape. Index : 1 – rectangular, 2 – gaussian</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].test_generator.shape.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].test_generator.shape.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.detectors[:].test_generator.shape.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.ids_properties</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.ids_properties.comment</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Any comment describing the content of this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.ids_properties.creation_date</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Date at which this data has been produced</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.ids_properties.homogeneous_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>This node must be filled (with 0, 1, or 2) for the IDS to be valid. If 1, the time of this IDS is homogeneous, i.e. the time values for this IDS are stored in the time node just below the root of this IDS. If 0, the time values are stored in the various time fields at lower levels in the tree. In the case only constant or static nodes are filled within the IDS, homogeneous_time must be set to 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.ids_properties.provider</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the person in charge of producing this data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.ids_properties.source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Source of the data (any comment describing the origin of the data : code, path to diagnostic signals, processing method, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.ids_properties.version_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Version of the access layer package used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.ids_properties.version_put.access_layer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Access Layer used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.ids_properties.version_put.access_layer_language</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Programming language of the Access Layer high level API used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.ids_properties.version_put.data_dictionary</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Data Dictionary used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.synthetic_signals</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Output Data from Neutron Diagnostic's Module</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.synthetic_signals.fusion_power</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Fusion Power</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.synthetic_signals.total_neutron_flux</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s^-1</p></td><td><p>Total Neutron Flux in Dynamic</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Generic time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.unit_source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Unit ring sources description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.unit_source[:].position</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Position of ring unit sources inside ITER vacuum vessel</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.unit_source[:].position.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.unit_source[:].position.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.unit_source[:].radiation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...2]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Radiation type on detector's converter (1 - 'neutrons'; 2 - 'gamma-rays')</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.unit_source[:].radiation[:].index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of radiation type. TO BE REMOVED, since it is given by the index of the radiation array above.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.unit_source[:].radiation[:].reaction</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...2]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Plasma reaction (1 - 'DT'; 2 - 'DD')</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.unit_source[:].radiation[:].reaction[:].d2flux_drdz</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors,<br> neutron_diagnostic.unit_source[:].radiation[:].reaction[:].energy]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-4</p></td><td><p>Second deriviation of Radiation flux from Unit Ring Source in recent detector's converter for "spline" reconstruction</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>neutron_diagnostic.unit_source[:].radiation[:].reaction[:].energy</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Energy boundaries for Detector Radiator Flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.unit_source[:].radiation[:].reaction[:].flux</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors,<br> neutron_diagnostic.unit_source[:].radiation[:].reaction[:].energy]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2</p></td><td><p>Radiation flux from Unit Ring Source in recent detector's converter</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.unit_source[:].radiation[:].reaction[:].index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of plasma reaction type. To be removed, since it is given by the index of the reaction array above.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.unit_source[:].radiation[:].reaction[:].reaction_rate</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors,<br> neutron_diagnostic.unit_source[:].radiation[:].reaction[:].energy]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Reaction Rate on converter's material from Unit Ring Source in recent detector's converter</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>neutron_diagnostic.unit_source[:].radiation[:].reaction[:].sensitivity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[neutron_diagnostic.detectors,<br> neutron_diagnostic.unit_source[:].radiation[:].reaction[:].energy]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>cps.m^2.s</p></td><td><p>Sensitivity of converter's material in recent detector's converter</p></td></tr>
   </table>
   </table><p></p>
