
calorimetry
^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th style="width:25%">Path</th><th style="width:25%">Dimensions</th><th>Type</th><th>Units</th><th>Description</th></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p></p></td><td><p></p></td><td><p>Calometry measurements on various tokamak subsystems</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.code</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Generic decription of the code-specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.code.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.code.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software generating IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.code.output_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.code.parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.code.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.code.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Set of cooling loops</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>ID of the loop</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].mass_flow</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>kg.s^-1</p></td><td><p>Mass flow of the coolant going through the loop</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].mass_flow.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.cooling_loop[:].mass_flow.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>kg.s^-1</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>calorimetry.cooling_loop[:].mass_flow.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].mass_flow.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].mass_flow.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.cooling_loop[:].mass_flow.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the loop</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].temperature_in</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>K</p></td><td><p>Temperature of the coolant when entering the loop</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].temperature_in.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.cooling_loop[:].temperature_in.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>K</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>calorimetry.cooling_loop[:].temperature_in.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].temperature_in.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].temperature_in.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.cooling_loop[:].temperature_in.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].temperature_out</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>K</p></td><td><p>Temperature of the coolant when exiting the loop</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].temperature_out.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.cooling_loop[:].temperature_out.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>K</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>calorimetry.cooling_loop[:].temperature_out.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].temperature_out.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.cooling_loop[:].temperature_out.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.cooling_loop[:].temperature_out.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Set of groups of components on which calorimetry measurements are carried out (grouped by tokamak subsystems or localisation on the machine)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Set of components on which calorimetry measurements are carried out</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].energy_cumulated</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>J</p></td><td><p>Energy extracted from the component since the start of the pulse</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].energy_cumulated.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.group[:].component[:].energy_cumulated.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>J</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>calorimetry.group[:].component[:].energy_cumulated.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].energy_cumulated.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].energy_cumulated.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.group[:].component[:].energy_cumulated.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].energy_total</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>J</p></td><td><p>Energy extracted from the component on the whole plasma discharge, including the return to thermal equilibrium of the component in the post-pulse phase</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>ID of the component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].mass_flow</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>kg.s^-1</p></td><td><p>Mass flow of the coolant going through the component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].mass_flow.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.group[:].component[:].mass_flow.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>kg.s^-1</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>calorimetry.group[:].component[:].mass_flow.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].mass_flow.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].mass_flow.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.group[:].component[:].mass_flow.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].power</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>W</p></td><td><p>Power extracted from the component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].power.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.group[:].component[:].power.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>calorimetry.group[:].component[:].power.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].power.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].power.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.group[:].component[:].power.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].temperature_in</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>K</p></td><td><p>Temperature of the coolant when entering the component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].temperature_in.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.group[:].component[:].temperature_in.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>K</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>calorimetry.group[:].component[:].temperature_in.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].temperature_in.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].temperature_in.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.group[:].component[:].temperature_in.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].temperature_out</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>K</p></td><td><p>Temperature of the coolant when exiting the component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].temperature_out.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.group[:].component[:].temperature_out.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>K</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>calorimetry.group[:].component[:].temperature_out.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].temperature_out.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].component[:].temperature_out.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[calorimetry.group[:].component[:].temperature_out.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>ID of the group</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.group[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the group</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.ids_properties</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.ids_properties.comment</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Any comment describing the content of this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.ids_properties.creation_date</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Date at which this data has been produced</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.ids_properties.homogeneous_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>This node must be filled (with 0, 1, or 2) for the IDS to be valid. If 1, the time of this IDS is homogeneous, i.e. the time values for this IDS are stored in the time node just below the root of this IDS. If 0, the time values are stored in the various time fields at lower levels in the tree. In the case only constant or static nodes are filled within the IDS, homogeneous_time must be set to 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.ids_properties.provider</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the person in charge of producing this data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.ids_properties.source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Source of the data (any comment describing the origin of the data : code, path to diagnostic signals, processing method, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.ids_properties.version_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Version of the access layer package used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.ids_properties.version_put.access_layer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Access Layer used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.ids_properties.version_put.access_layer_language</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Programming language of the Access Layer high level API used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>calorimetry.ids_properties.version_put.data_dictionary</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Data Dictionary used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>calorimetry.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Generic time</p></td></tr>
   </table>
   </table><p></p>
