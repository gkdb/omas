
ec launchers
^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th style="width:25%">Path</th><th style="width:25%">Dimensions</th><th>Type</th><th>Units</th><th>Description</th></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p></p></td><td><p></p></td><td><p>Launchers for heating and current drive in the electron cyclotron (EC) frequencies.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.code</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Generic decription of the code-specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.code.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.code.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software generating IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.code.output_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[ec_launchers.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.code.parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.code.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.code.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.ids_properties</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.ids_properties.comment</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Any comment describing the content of this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.ids_properties.creation_date</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Date at which this data has been produced</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.ids_properties.homogeneous_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>This node must be filled (with 0, 1, or 2) for the IDS to be valid. If 1, the time of this IDS is homogeneous, i.e. the time values for this IDS are stored in the time node just below the root of this IDS. If 0, the time values are stored in the various time fields at lower levels in the tree. In the case only constant or static nodes are filled within the IDS, homogeneous_time must be set to 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.ids_properties.provider</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the person in charge of producing this data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.ids_properties.source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Source of the data (any comment describing the origin of the data : code, path to diagnostic signals, processing method, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.ids_properties.version_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Version of the access layer package used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.ids_properties.version_put.access_layer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Access Layer used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.ids_properties.version_put.access_layer_language</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Programming language of the Access Layer high level API used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.ids_properties.version_put.data_dictionary</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Data Dictionary used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>struct_array</p></td><td><p></p></td><td><p>Set of Electron Cyclotron launchers</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].beam</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Beam characteristics</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].beam.phase</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Phase ellipse characteristics</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].beam.phase.angle</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>rad</p></td><td><p>Rotation angle for the phase ellipse</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].beam.phase.angle.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[ec_launchers.launcher[:].beam.phase.angle.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>rad</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>ec_launchers.launcher[:].beam.phase.angle.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].beam.phase.curvature</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...2,<br> ec_launchers.launcher[:].beam.phase.curvature.time]</p></td><td><p>structure</p></td><td><p>m^-1</p></td><td><p>Inverse curvature radii for the phase ellipse, positive/negative for divergent/convergent beams</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].beam.phase.curvature.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> ec_launchers.launcher[:].beam.phase.curvature.time]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-1</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>ec_launchers.launcher[:].beam.phase.curvature.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].beam.spot</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Spot ellipse characteristics</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].beam.spot.angle</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>rad</p></td><td><p>Rotation angle for the spot ellipse</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].beam.spot.angle.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[ec_launchers.launcher[:].beam.spot.angle.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>rad</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>ec_launchers.launcher[:].beam.spot.angle.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].beam.spot.size</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...2,<br> ec_launchers.launcher[:].beam.spot.size.time]</p></td><td><p>structure</p></td><td><p>m</p></td><td><p>Size of the spot ellipse</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].beam.spot.size.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> ec_launchers.launcher[:].beam.spot.size.time]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>ec_launchers.launcher[:].beam.spot.size.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].frequency</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>Hz</p></td><td><p>Frequency</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].frequency.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[ec_launchers.launcher[:].frequency.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Hz</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>ec_launchers.launcher[:].frequency.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Identifier of the launcher (unique within the set of all launchers of the experiment)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].launching_position</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Launching position of the beam</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].launching_position.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[ec_launchers.launcher[:].launching_position.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].launching_position.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[ec_launchers.launcher[:].launching_position.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>ec_launchers.launcher[:].launching_position.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time for the R,Z,phi coordinates</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].launching_position.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[ec_launchers.launcher[:].launching_position.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].mode</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p></p></td><td><p>Identifier for the main plasma wave mode excited by the EC beam. For the ordinary mode (O-mode), mode/data=1. For the extraordinary mode (X-mode), mode/data=-1</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].mode.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[ec_launchers.launcher[:].mode.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>ec_launchers.launcher[:].mode.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the launcher (unique within the set of all launchers of the experiment)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].power_launched</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>W</p></td><td><p>Power launched from this launcher into the vacuum vessel</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].power_launched.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[ec_launchers.launcher[:].power_launched.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>ec_launchers.launcher[:].power_launched.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].steering_angle_pol</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>rad</p></td><td><p>Steering angle of the EC beam in the R,Z plane (from the -R axis towards the -Z axis), angle_pol=atan2(-k_Z,-k_R), where k_Z and k_R are the Z and R components of the mean wave vector in the EC beam</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].steering_angle_pol.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[ec_launchers.launcher[:].steering_angle_pol.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>rad</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>ec_launchers.launcher[:].steering_angle_pol.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].steering_angle_tor</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>structure</p></td><td><p>rad</p></td><td><p>Steering angle of the EC beam away from the poloidal plane that is increasing towards the positive phi axis, angle_tor=arcsin(k_phi/k), where k_phi is the component of the wave vector in the phi direction and k is the length of the wave vector. Here the term wave vector refers to the mean wave vector in the EC beam</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>ec_launchers.launcher[:].steering_angle_tor.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[ec_launchers.launcher[:].steering_angle_tor.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>rad</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>ec_launchers.launcher[:].steering_angle_tor.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>ec_launchers.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>flt_1d_type</p></td><td><p>s</p></td><td><p>Generic time</p></td></tr>
   </table>
   </table><p></p>
