.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_omas_units.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_omas_units.py:


Units conversions
=================
This example illustrates how OMAS can automatically translate units by leveraging the `pint` Python package


.. code-block:: default


    from __future__ import print_function, division, unicode_literals

    from omas import *

    import pint

    ureg = pint.UnitRegistry()

    ods = ODS()

    invalue = 8.0 * ureg.milliseconds
    print('Data input: %s' % invalue)
    ods['equilibrium.time_slice[0].constraints.diamagnetic_flux.time_measurement'] = invalue

    outvalue = ods['equilibrium.time_slice[0].constraints.diamagnetic_flux.time_measurement']
    print('Data output without units support: %s (IMAS uses MKS)' % outvalue)

    with omas_environment(ods, unitsio=True):
        outvalue = ods['equilibrium.time_slice[0].constraints.diamagnetic_flux.time_measurement']
    print('Data output with units support: %s' % outvalue)


.. code-block:: none

    Data input: 8.0 millisecond
    Data output without units support: 0.008 (IMAS uses MKS)
    Data output with units support: 0.008 second



.. _sphx_glr_download_auto_examples_omas_units.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: omas_units.py <omas_units.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: omas_units.ipynb <omas_units.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
